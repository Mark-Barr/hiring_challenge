<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
 
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
 
    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan base-package="com.itcoretest.controllers" />
 
 
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />

    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource" />
  		<property name="configLocation" value="WEB-INF/mybatis/SQLMapConfig.xml"/>
	</bean>

<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
	destroy-method="close">
	<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	<property name="url" value="jdbc:mysql://localhost:3306/itcore_test"/>
    <property name="username" value="test"/>
    <property name="password" value="test"/>
    </bean>
    
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" /> 
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="prefix" value="/WEB-INF/views/"/>
	    <property name="suffix" value=".jsp"/>
	</bean> 
    
    <!-- simple transactional service layer bean; the userDao can be implemented in various ways with MyBatis-Spring  -->
    <bean id="SchoolService" class="com.itcoretest.services.SchoolService">
        <property name="SchoolDAO" ref="SchoolDAO" />
    </bean>
    <bean id="PeopleService" class="com.itcoretest.services.PeopleService">
        <property name="PeopleDAO" ref="PeopleDAO" />
    </bean>
    <bean id="HouseholdService" class="com.itcoretest.services.HouseholdService">
        <property name="HouseholdDAO" ref="HouseholdDAO" />
    </bean>
    <bean id="WorkplaceService" class="com.itcoretest.services.WorkplaceService">
        <property name="WorkplaceDAO" ref="WorkplaceDAO" />
    </bean>
 
 <bean id="SchoolDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
  <property name="mapperInterface" value="com.itcoretest.dao.SchoolDAO" />
  <property name="sqlSessionFactory" ref="sqlSessionFactory" />
</bean>

 <bean id="PeopleDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
  <property name="mapperInterface" value="com.itcoretest.dao.PeopleDAO" />
  <property name="sqlSessionFactory" ref="sqlSessionFactory" />
</bean>

 <bean id="HouseholdDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
  <property name="mapperInterface" value="com.itcoretest.dao.HouseholdDAO" />
  <property name="sqlSessionFactory" ref="sqlSessionFactory" />
</bean>

 <bean id="WorkplaceDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
  <property name="mapperInterface" value="com.itcoretest.dao.WorkplaceDAO" />
  <property name="sqlSessionFactory" ref="sqlSessionFactory" />
</bean>

</beans>

